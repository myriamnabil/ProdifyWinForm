<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>